import telebot
from telebot import TeleBot, types
import csv
from datetime import datetime
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

token = '6202417152:AAGOP0-Czt7huFKujx082YNOqu7NzMTFflU'
bot = telebot.TeleBot(token)
flag: bool = False
@bot.message_handler(commands=['start'])
def start(message):
    #bot.reply_to(message, message.from_user.first_name)
    first_name = message.from_user.first_name
    markup = types.InlineKeyboardMarkup()
    but1 = types.InlineKeyboardButton("–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å", callback_data="teacher")
    but2 = types.InlineKeyboardButton("–°—Ç—É–¥–µ–Ω—Ç", callback_data="student")
    markup.add(but1, but2)
    bot.send_message(message.chat.id, text=f"üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ,  {first_name} !\n–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –±–æ—Ç–∞ –ë–ì–≠–£!\n"
                                           f"–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –í–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –í–∞—à–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏!\n"
                                           f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å:", reply_markup=markup)
problem: str = ""
status: str = ""

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.data:
        if call.data == 'student':
            global problem
            global status
            status = "student"
            #bot.send_message(chat_id=call.message.chat.id, text=f"–û–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–±–ª–µ–º—É:", reply_markup=markup)
            markup = types.InlineKeyboardMarkup() #—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
            btn1 = types.InlineKeyboardButton("–ù–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É (–Ω–µ–≤–µ—Ä–Ω—ã–π –ª–æ–≥–∏–Ω –∏–ª–∏ –ø–∞—Ä–æ–ª—å)", callback_data="ans_1")
            btn2 = types.InlineKeyboardButton("–Ø –Ω–µ –∑–Ω–∞—é —Å–≤–æ–∏ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å", callback_data="ans_2")
            btn3 = types.InlineKeyboardButton("–Ø –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è (–ø–µ—Ä–µ–≤–µ–ª—Å—è –∏–∑ –¥—Ä—É–≥–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞)", callback_data="ans_3")
            btn4 = types.InlineKeyboardButton("–Ø –Ω–µ –≤–∏–∂—É –Ω—É–∂–Ω–æ–≥–æ  —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–≥–æ–≥–æ–≥–æ –∫—É—Ä—Å–∞, –≥–¥–µ –±—ã —è –≤—ã–ø–æ–ª–Ω—è–ª –∑–∞–¥–∞–Ω–∏—è –∏ —É—á–∞—Å—Ç–≤–æ–≤–∞–ª –≤ –≤–∏–¥–µ–æ–∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è—Ö", callback_data="ans_4")
            btn5 = types.InlineKeyboardButton("–Ø –∑–∞–±—ã–ª –ø–∞—Ä–æ–ª—å", callback_data="ans_5")
            btn6 = types.InlineKeyboardButton("–ú–æ–µ–π –ø—Ä–æ–±–ª–µ–º—ã –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ", callback_data="ans_6")
            markup.add(btn1)
            markup.add(btn2)
            markup.add(btn3)
            markup.add(btn4)
            markup.add(btn5)
            markup.add(btn6)
            bot.send_message(chat_id=call.message.chat.id, text=f"–û–ø–∏—à–∏—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–±–ª–µ–º—É:", reply_markup=markup)
        elif call.data == 'ans_1':
            markup = types.InlineKeyboardMarkup() #resize_keyboard=True)  # —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
            btn1 = types.InlineKeyboardButton("elearning.bseu.by", callback_data="ans_7")
            btn2 = types.InlineKeyboardButton("i.bseu.by", callback_data="ans_8")
            markup.add(btn1)
            markup.add(btn2)
            bot.send_message(chat_id=call.message.chat.id, text=f"–ö–∞–∫–æ–π –∞–¥—Ä–µ—Å –ø—Ä–æ–ø–∏—Å–∞–Ω? –≤ –∞–¥—Ä–µ—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ?", reply_markup=markup)
        elif call.data == 'ans_7':
            markup = types.InlineKeyboardMarkup()  # resize_keyboard=True)  # —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
            btn1 = types.InlineKeyboardButton("–î–∞, –≤—Å—ë –≤–µ—Ä–Ω–æ", callback_data="ans_9")
            btn2 = types.InlineKeyboardButton("–ù–µ—Ç, —É –º–µ–Ω—è –æ—à–∏–±–∫–∞...", callback_data="ans_9")
            markup.add(btn1)
            markup.add(btn2)
            bot.send_message(chat_id=call.message.chat.id, text=f"–õ–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –Ω–∞–ø–∏—Å–∞–Ω—ã —Å—Ç—Ä–æ—á–Ω—ã–º–∏ (–º–∞–ª–µ–Ω—å–∫–∏–º–∏) –ª–∞—Ç–∏–Ω—Å–∫–∏–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏?",
                             reply_markup=markup)
        elif call.data == 'ans_9':
            markup = types.InlineKeyboardMarkup()  # resize_keyboard=True)  # —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
            btn1 = types.InlineKeyboardButton("–î–∞, —Å–ø–∞—Å–∏–±–æ", callback_data="ans_10")
            btn2 = types.InlineKeyboardButton("–ù–µ—Ç, —è —Ö–æ—á—É –Ω–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É", callback_data="ans_11")
            markup.add(btn1)
            markup.add(btn2)
            bot.send_message(chat_id=call.message.chat.id, text=f"–í—ã —Ä–µ—à–∏–ª–∏ —Å–≤–æ—é –ø—Ä–æ–±–ª–µ–º—É?",
                             reply_markup=markup)
        elif call.data == 'ans_10':
            markup = types.InlineKeyboardMarkup()  # resize_keyboard=True)  # —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
            btn1 = types.InlineKeyboardButton("–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ", callback_data="student")
            markup.add(btn1)
            bot.send_message(chat_id=call.message.chat.id, text=f"–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ!",
                             reply_markup=markup)
        elif call.data == 'ans_11':
            markup = types.InlineKeyboardMarkup()  # resize_keyboard=True)  # —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
            btn1 = types.InlineKeyboardButton("–ù–µ—Ç, —è –µ—â–µ –ø–æ–¥—É–º–∞—é", callback_data="student")
            global flag
            flag = True
            markup.add(btn1)
            bot.send_message(chat_id=call.message.chat.id, text=f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–æ–æ–±—â–∏—Ç–µ –í–∞—à–∏ —Ñ–∞–º–∏–ª–∏—é, –∏–º—è –æ—Ç—á–µ—Å—Ç–≤–æ, –∞ —Ç–∞–∫ –∂–µ —à–∏—Ñ—Ä –≥—Ä—É–ø–ø—ã –∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å.",
                             reply_markup=markup)
        elif call.data == 'ans_12':
            data_csv = [status, str(datetime.now()), problem]
            with open('admin_message.csv', 'w', newline='') as csvfile:
                spamwriter = csv.writer(csvfile, delimiter=' ',
                                        quotechar='|', quoting=csv.QUOTE_MINIMAL)
                spamwriter.writerow(data_csv)
            markup = types.InlineKeyboardMarkup()  # resize_keyboard=True)  # —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
            btn1 = types.InlineKeyboardButton("–í –Ω–∞—á–∞–ª–æ", callback_data="student")
            markup.add(btn1)
            bot.send_message(chat_id=call.message.chat.id,
                             text=f"–í—Å–µ–≥–æ –¥–æ–±—Ä–æ–≥–æ!\n–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å–≤—è–∂–µ—Ç—Å—è —Å –í–∞–º–∏!!!",
                             reply_markup=markup)


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    global flag
    global problem
    if message.text != '' and flag == True:
        problem = message.text
        markup = types.InlineKeyboardMarkup()  # resize_keyboard=True)  # —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫
        btn1 = types.InlineKeyboardButton("–î–∞, –≤—Å—ë –≤–µ—Ä–Ω–æ", callback_data="ans_12")
        btn2 = types.InlineKeyboardButton("–ù–µ—Ç, —Ö–æ—á—É –∏—Å–ø—Ä–∞–≤–∏—Ç—å", callback_data="ans_11")
        markup.add(btn1, btn2)
        flag = False
        bot.send_message(chat_id=message.chat.id,
                         text=f"–í—Å–µ –ª–∏ –≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω–æ?\n{problem}", reply_markup=markup)
    else:
        bot.send_message(chat_id=message.chat.id,
                         text=f"–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤", reply_markup=markup)


bot.polling(none_stop=True, interval=0)